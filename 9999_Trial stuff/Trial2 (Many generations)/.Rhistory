#library(ggplot2)
d = read.table("mutations_all_gen.txt", header=T, sep = " ")
d$Frequency = d$Number/20000
d$Diversity = 2*d$Frequency*(1-d$Frequency)
alpha_div = data.frame()
gen_list = levels(factor(d$Tick_Number))
for (generation in gen_list){
fit_1 = lm(log(s*s) ~ log(Diversity), d[d$Tick_Number==generation,])
print(generation)
summary(fit_1)
alpha_div = rbind(alpha_div,c(generation, coef(fit_1)[1], coef(fit_1)[2]))
}
colnames(alpha_div) = c("Generation", "Intercept", "Slope")
plot(alpha_div$Generation, alpha_div$Slope)
plot(alpha_div$Generation, alpha_div$Intercept)
length(d[d$Tick_Number==1000,])
length(d[d$Tick_Number==10000,])
width(d[d$Tick_Number==10000,])
length(d[d$Tick_Number==10000,]$Tick_Number)
length(d[d$Tick_Number==99000,]$Tick_Number)
for (generation in gen_list){
fit_1 = lm(log(s*s) ~ log(Diversity), d[d$Tick_Number==generation,])
print(generation)
summary(fit_1)
alpha_div = rbind(alpha_div,c(generation, coef(fit_1)[1], coef(fit_1)[2], length(d[d$Tick_Number==generation,]$Tick_Number))
}
for (generation in gen_list){
fit_1 = lm(log(s*s) ~ log(Diversity), d[d$Tick_Number==generation,])
print(generation)
summary(fit_1)
alpha_div = rbind(alpha_div,c(generation, coef(fit_1)[1], coef(fit_1)[2], length(d[d$Tick_Number==generation,]$Tick_Number))
}
for (generation in gen_list){
fit_1 = lm(log(s*s) ~ log(Diversity), d[d$Tick_Number==generation,])
print(generation)
summary(fit_1)
alpha_div = rbind(alpha_div,c(generation, coef(fit_1)[1], coef(fit_1)[2], length(d[d$Tick_Number==generation,]$Tick_Number)))
}
colnames(alpha_div) = c("Generation", "Intercept", "Slope", "Segregating mutations")
plot(alpha_div$Generation, alpha_div$Slope)
plot(alpha_div$Generation, alpha_div$Intercept)
colnames(alpha_div) = c("Generation", "Intercept", "Slope", "Segregating_mutations")
for (generation in gen_list){
fit_1 = lm(log(s*s) ~ log(Diversity), d[d$Tick_Number==generation,])
print(generation)
summary(fit_1)
alpha_div = rbind(alpha_div,c(generation, coef(fit_1)[1], coef(fit_1)[2], length(d[d$Tick_Number==generation,]$Tick_Number)))
}
warnings()
alpha_div = rbind(alpha_div,c(generation, coef(fit_1)[1], coef(fit_1)[2], length(d[d$Tick_Number==generation,]$Tick_Number)))
#library(ggplot2)
d = read.table("mutations_all_gen.txt", header=T, sep = " ")
d$Frequency = d$Number/20000
d$Diversity = 2*d$Frequency*(1-d$Frequency)
alpha_div = data.frame()
gen_list = levels(factor(d$Tick_Number))
for (generation in gen_list){
fit_1 = lm(log(s*s) ~ log(Diversity), d[d$Tick_Number==generation,])
print(generation)
summary(fit_1)
alpha_div = rbind(alpha_div,c(generation, coef(fit_1)[1], coef(fit_1)[2], length(d[d$Tick_Number==generation,]$Tick_Number)))
}
colnames(alpha_div) = c("Generation", "Intercept", "Slope", "Segregating_mutations")
plot(alpha_div$Generation, alpha_div$Slope)
plot(alpha_div$Generation, alpha_div$Intercept)
plot(alpha_div$Generation, alpha_div$Segregating_mutations)
plot(alpha_div$Generation, alpha_div$Slope)
plot(alpha_div$Generation, alpha_div$Intercept)
plot(alpha_div$Generation, alpha_div$Slope)
plot(alpha_div$Generation, alpha_div$Segregating_mutations)
#library(ggplot2)
d = read.table("mutations_all_gen.txt", header=T, sep = " ")
d$Frequency = d$Number/20000
d$Diversity = 2*d$Frequency*(1-d$Frequency)
alpha_div = data.frame()
gen_list = levels(factor(d$Tick_Number))
for (generation in gen_list){
fit_1 = lm(log(s*s) ~ log(Diversity), d[d$Tick_Number==generation,])
print(generation)
summary(fit_1)
alpha_div = rbind(alpha_div,c(generation, coef(fit_1)[1], coef(fit_1)[2], length(d[d$Tick_Number==generation,]$Tick_Number), average(d[d$Tick_Number==generation,]$Diversity)))
}
for (generation in gen_list){
fit_1 = lm(log(s*s) ~ log(Diversity), d[d$Tick_Number==generation,])
print(generation)
summary(fit_1)
alpha_div = rbind(alpha_div,c(generation, coef(fit_1)[1], coef(fit_1)[2], length(d[d$Tick_Number==generation,]$Tick_Number), mean(d[d$Tick_Number==generation,]$Diversity)))
}
colnames(alpha_div) = c("Generation", "Intercept", "Slope", "Segregating_mutations", "Average_diversity")
plot(alpha_div$Generation, alpha_div$Slope)
plot(alpha_div$Generation, alpha_div$Intercept)
plot(alpha_div$Generation, alpha_div$Segregating_mutations)
plot(alpha_div$Generation, alpha_div$Average_diversity)
View(d)
View(alpha_div)
d$V_a = (d$Diversity)*(d$s)*(d$s)
#library(ggplot2)
d = read.table("mutations_all_gen.txt", header=T, sep = " ")
d$Frequency = d$Number/20000
d$Diversity = 2*d$Frequency*(1-d$Frequency)
d$V_a = (d$Diversity)*(d$s)*(d$s)
alpha_div = data.frame()
gen_list = levels(factor(d$Tick_Number))
#loop over generations
for (generation in gen_list){
fit_1 = lm(log(s*s) ~ log(Diversity), d[d$Tick_Number==generation,])
#print(generation)
summary(fit_1)
alpha_div = rbind(alpha_div,c(generation, coef(fit_1)[1], coef(fit_1)[2], length(d[d$Tick_Number==generation,]$Tick_Number), mean(d[d$Tick_Number==generation,]$Diversity, sum(d[d$Tick_Number==generation,]$V_a)))
}
for (generation in gen_list){
fit_1 = lm(log(s*s) ~ log(Diversity), d[d$Tick_Number==generation,])
#print(generation)
summary(fit_1)
alpha_div = rbind(alpha_div,c(generation, coef(fit_1)[1], coef(fit_1)[2], length(d[d$Tick_Number==generation,]$Tick_Number), mean(d[d$Tick_Number==generation,]$Diversity), sum(d[d$Tick_Number==generation,]$V_a)))
}
colnames(alpha_div) = c("Generation", "Intercept", "Slope", "Segregating_mutations", "Average_diversity", "V_a")
plot(alpha_div$Generation, alpha_div$Slope)
plot(alpha_div$Generation, alpha_div$Intercept)
plot(alpha_div$Generation, alpha_div$Segregating_mutations)
plot(alpha_div$Generation, alpha_div$Average_diversity)
plot(alpha_div$Generation, alpha_div$V_a)
View(d)
plot(alpha_div$Generation, alpha_div$Slope)
plot(alpha_div$Generation, alpha_div$Intercept)
plot(alpha_div$Generation, alpha_div$Segregating_mutations)
plot(alpha_div$Generation, alpha_div$Average_diversity)
plot(alpha_div$Generation, alpha_div$V_a)
plot(alpha_div$Generation, alpha_div$Slope)
plot(alpha_div$Generation, alpha_div$Intercept)
plot(alpha_div$Generation, alpha_div$Segregating_mutations)
plot(alpha_div$Generation, alpha_div$Average_diversity)
plot(alpha_div$Generation, alpha_div$Average_diversity)
plot(alpha_div$Generation, alpha_div$V_a)
plot(alpha_div$Generation, alpha_div$V_a)
plot(alpha_div$Generation, alpha_div$Slope)
plot(alpha_div$Generation, alpha_div$Intercept)
plot(alpha_div$Generation, alpha_div$Slope)
plot(alpha_div$Generation, alpha_div$Intercept)
plot(alpha_div$Generation, alpha_div$Segregating_mutations)
plot(alpha_div$Generation, alpha_div$Average_diversity)
#library(ggplot2)
d = read.table("mutations_all_gen.txt", header=T, sep = " ")
d$Frequency = d$Number/20000
d$Diversity = 2*d$Frequency*(1-d$Frequency)
d$V_a = (d$Diversity)*(d$s)*(d$s)
alpha_div = data.frame()
gen_list = levels(factor(d$Tick_Number))
for (generation in gen_list){
fit_1 = lm(log(s*s) ~ log(Diversity), d[d$Tick_Number==generation,])
#print(generation)
#summary(fit_1)
alpha_div = rbind(alpha_div,c(generation, coef(fit_1)[1], coef(fit_1)[2], length(d[d$Tick_Number==generation,]$Tick_Number), mean(d[d$Tick_Number==generation,]$Diversity), sum(d[d$Tick_Number==generation,]$V_a)))
}
colnames(alpha_div) = c("Generation", "Intercept", "Slope", "Segregating_mutations", "Average_diversity", "V_a")
plot(alpha_div$Generation, alpha_div$Slope)
View(alpha_div)
plot(alpha_div$Generation, alpha_div$Intercept)
plot(alpha_div$Generation, alpha_div$Segregating_mutations)
plot(alpha_div$Generation, alpha_div$Average_diversity)
plot(alpha_div$Generation, alpha_div$V_a)
plot(alpha_div$Generation, alpha_div$Slope)
plot(alpha_div$Generation, alpha_div$Intercept)
plot(alpha_div$Generation, alpha_div$Segregating_mutations)
plot(alpha_div$Generation, alpha_div$Slope)
plot(alpha_div$Generation, alpha_div$Intercept)
plot(alpha_div$Generation, alpha_div$Slope)
plot(alpha_div$Generation, alpha_div$Segregating_mutations)
plot(alpha_div$Generation, alpha_div$Average_diversity)
plot(alpha_div$Generation, alpha_div$V_a)
plot(alpha_div$Generation, alpha_div$Slope)
plot(alpha_div$Generation, alpha_div$Intercept)
plot(alpha_div$Generation, alpha_div$Segregating_mutations)
plot(alpha_div$Generation, alpha_div$V_a)
plot(alpha_div$Generation, alpha_div$V_a)
plot(alpha_div$Generation, alpha_div$Average_diversity)
plot(alpha_div$Generation, alpha_div$Segregating_mutationsating_mutations)
plot(alpha_div$Generation, alpha_div$Segregating_mutationsating_mutations)
plot(alpha_div$Generation, alpha_div$Segregating_mutationsating_mutations)
plot(alpha_div$Generation, alpha_div$Intercept)
#library(ggplot2)
d = read.table("mutations_all_gen.txt", header=T, sep = " ")
d$Frequency = d$Number/20000
d$Diversity = 2*d$Frequency*(1-d$Frequency)
d$V_a = (d$Diversity)*(d$s)*(d$s)
# Create an empty data frame to store the outputs of linear models between log(s*s) and log(Diversity) for each generation
alpha_div = data.frame()
# List various generations in the data set
gen_list = levels(factor(d$Tick_Number))
#loop over generations
for (generation in gen_list){
fit_1 = lm(log(s*s) ~ log(Diversity), d[d$Tick_Number==generation,])
#print(generation)
#summary(fit_1)
alpha_div = rbind(alpha_div,c(generation, coef(fit_1)[1], coef(fit_1)[2], length(d[d$Tick_Number==generation,]$Tick_Number), mean(d[d$Tick_Number==generation,]$Diversity), sum(d[d$Tick_Number==generation,]$V_a)))
}
colnames(alpha_div) = c("Generation", "Intercept", "Slope", "Segregating_mutations", "Average_diversity", "V_a")
plot(alpha_div$Generation, alpha_div$Slope)
plot(alpha_div$Generation, alpha_div$Intercept)
plot(alpha_div$Generation, alpha_div$Segregating_mutationsating_mutations)
plot(alpha_div$Generation, alpha_div$Average_diversity)
plot(alpha_div$Generation, alpha_div$V_a)
#############################################
#p = ggplot(d, aes(x = Diversity, y = s*s))
#p + theme_bw() + geom_point() + geom_smooth(method = "lm")
#p = ggplot(d, aes(x = log(Diversity), y = log(s*s))
#p + theme_bw() + geom_point() + geom_smooth(method = "lm")
#hist(d$Frequency, breaks = 20)
#hist(d$Diversity, breaks = 20)
#hist(d$s, breaks = 20)
plot(alpha_div$Generation, alpha_div$Segregating_mutationsating_mutations)
plot(alpha_div$Generation, alpha_div$Segregating_mutations)
plot(alpha_div$Segregating_mutations, alpha_div$Average_diversity)
plot(alpha_div$Generation, alpha_div$Average_diversity)
pdf("r_4e-8.pdf")
plot(alpha_div$Generation, alpha_div$Slope)
plot(alpha_div$Generation, alpha_div$Intercept)
plot(alpha_div$Generation, alpha_div$Segregating_mutations)
plot(alpha_div$Generation, alpha_div$Average_diversity)
plot(alpha_div$Generation, alpha_div$V_a)
plot(alpha_div$Segregating_mutations, alpha_div$Average_diversity)
dev.off()
plot(alpha_div$Slope, alpha_div$Intercept)
pdf("r_4e-8.pdf")
plot(alpha_div$Generation, alpha_div$Slope)
plot(alpha_div$Generation, alpha_div$Intercept)
plot(alpha_div$Generation, alpha_div$Segregating_mutations)
plot(alpha_div$Generation, alpha_div$Average_diversity)
plot(alpha_div$Generation, alpha_div$V_a)
plot(alpha_div$Segregating_mutations, alpha_div$Average_diversity)
plot(alpha_div$Slope, alpha_div$Intercept)
dev.off()
#library(ggplot2)
d = read.table("mutations_all_gen.txt", header=T, sep = " ")
d$Frequency = d$Number/20000
d$Diversity = 2*d$Frequency*(1-d$Frequency)
d$V_a = (d$Diversity)*(d$s)*(d$s)
alpha_div = data.frame()
gen_list = levels(factor(d$Tick_Number))
for (generation in gen_list){
fit_1 = lm(log(s*s) ~ log(Diversity), d[d$Tick_Number==generation,])
#print(generation)
#summary(fit_1)
alpha_div = rbind(alpha_div,c(generation, coef(fit_1)[1], coef(fit_1)[2], length(d[d$Tick_Number==generation,]$Tick_Number), mean(d[d$Tick_Number==generation,]$Diversity), sum(d[d$Tick_Number==generation,]$V_a)))
}
colnames(alpha_div) = c("Generation", "Intercept", "Slope", "Segregating_mutations", "Average_diversity", "V_a")
plot(alpha_div$Generation, alpha_div$Slope)
plot(alpha_div$Generation, alpha_div$Intercept)
plot(alpha_div$Generation, alpha_div$Segregating_mutations)
plot(alpha_div$Generation, alpha_div$Average_diversity)
plot(alpha_div$Generation, alpha_div$V_a)
plot(alpha_div$Segregating_mutations, alpha_div$Average_diversity)
plot(alpha_div$Slope, alpha_div$Intercept)
pdf("r_4e-7.pdf")
plot(alpha_div$Generation, alpha_div$Slope)
plot(alpha_div$Generation, alpha_div$Intercept)
plot(alpha_div$Generation, alpha_div$Segregating_mutations)
plot(alpha_div$Generation, alpha_div$Average_diversity)
plot(alpha_div$Generation, alpha_div$V_a)
plot(alpha_div$Segregating_mutations, alpha_div$Average_diversity)
plot(alpha_div$Slope, alpha_div$Intercept)
dev.off()
fit_1 = lm(s~I(1/Frequency), d[d$Tick_Number==generation,])
#library(ggplot2)
d = read.table("mutations_all_gen.txt", header=T, sep = " ")
d$Frequency = d$Number/20000
d$Diversity = 2*d$Frequency*(1-d$Frequency)
d$V_a = (d$Diversity)*(d$s)*(d$s)
alpha_div = data.frame()
gen_list = levels(factor(d$Tick_Number))
for (generation in gen_list){
#fit_1 = lm(log(s*s) ~ log(Diversity), d[d$Tick_Number==generation,])
#print(generation)
#summary(fit_1)
fit_1 = lm(s~I(1/Frequency), d[d$Tick_Number==generation,])
alpha_div = rbind(alpha_div,c(generation, coef(fit_1)[1], coef(fit_1)[2], length(d[d$Tick_Number==generation,]$Tick_Number), mean(d[d$Tick_Number==generation,]$Diversity), sum(d[d$Tick_Number==generation,]$V_a)))
}
colnames(alpha_div) = c("Generation", "Intercept", "Slope", "Segregating_mutations", "Average_diversity", "V_a")
pdf("r_4e-7.pdf")
dev.off()
plot(alpha_div$Generation, alpha_div$Slope)
plot(d[d$Tick_Number==50000,]$s, 1/d[d$Tick_Number==50000,]$Frequency)
plot(d[d$Tick_Number==50000,]$s, d[d$Tick_Number==50000,]$Frequency)
plot(d[d$Tick_Number==50000,]$s, 1/d[d$Tick_Number==50000,]$Frequency)
plot(d[d$Tick_Number==50000,]$s, log(d[d$Tick_Number==50000,]$Frequency))
plot((d[d$Tick_Number==50000,]$s)^2, log(d[d$Tick_Number==50000,]$Frequency))
plot(2*log(d[d$Tick_Number==50000,]$s), log(d[d$Tick_Number==50000,]$Frequency))
^2
plot(d[d$Tick_Number==50000,]$s, log(d[d$Tick_Number==50000,]$Frequency))
#library(ggplot2)
d = read.table("mutations_all_gen.txt", header=T, sep = " ")
d$Frequency = d$Number/20000
d$Diversity = 2*d$Frequency*(1-d$Frequency)
d$V_a = (d$Diversity)*(d$s)*(d$s)
alpha_div = data.frame()
gen_list = levels(factor(d$Tick_Number))
for (generation in gen_list){
fit_1 = lm(log(s*s) ~ log(Diversity), d[d$Tick_Number==generation,])
#print(generation)
#summary(fit_1)
#fit_1 = lm(s~I(1/Frequency), d[d$Tick_Number==generation,])
alpha_div = rbind(alpha_div,c(generation, coef(fit_1)[1], coef(fit_1)[2], length(d[d$Tick_Number==generation,]$Tick_Number), mean(d[d$Tick_Number==generation,]$Diversity), sum(d[d$Tick_Number==generation,]$V_a)))
}
colnames(alpha_div) = c("Generation", "Intercept", "Slope", "Segregating_mutations", "Average_diversity", "V_a")
plot(alpha_div$Generation, alpha_div$Slope)
plot(alpha_div$Generation, alpha_div$Intercept)
plot(alpha_div$Generation, alpha_div$Segregating_mutations)
plot(alpha_div$Generation, alpha_div$Average_diversity)
plot(alpha_div$Generation, alpha_div$V_a)
plot(alpha_div$Segregating_mutations, alpha_div$Average_diversity)
plot(alpha_div$Slope, alpha_div$Intercept)
pdf("r_4e-10.pdf")
plot(alpha_div$Generation, alpha_div$Slope)
plot(alpha_div$Generation, alpha_div$Intercept)
plot(alpha_div$Generation, alpha_div$Segregating_mutations)
plot(alpha_div$Generation, alpha_div$Average_diversity)
plot(alpha_div$Generation, alpha_div$V_a)
plot(alpha_div$Segregating_mutations, alpha_div$Average_diversity)
plot(alpha_div$Slope, alpha_div$Intercept)
dev.off()
min(d$Frequency)
max(d$Frequency)
hist(d[d$Tick_Number=90000,]$Frequency)
hist(d[d$Tick_Number==90000,]$Frequency)
hist(d[d$Tick_Number==90000,]$s)
#library(ggplot2)
d = read.table("mutations_all_gen.txt", header=T, sep = " ")
d$Frequency = d$Number/20000
d$Diversity = 2*d$Frequency*(1-d$Frequency)
d$V_a = (d$Diversity)*(d$s)*(d$s)
alpha_div = data.frame()
gen_list = levels(factor(d$Tick_Number))
for (generation in gen_list){
fit_1 = lm(log(s*s) ~ log(Diversity), d[d$Tick_Number==generation,])
#print(generation)
#summary(fit_1)
#fit_1 = lm(s~I(1/Frequency), d[d$Tick_Number==generation,])
alpha_div = rbind(alpha_div,c(generation, coef(fit_1)[1], coef(fit_1)[2], length(d[d$Tick_Number==generation,]$Tick_Number), mean(d[d$Tick_Number==generation,]$Diversity), sum(d[d$Tick_Number==generation,]$V_a)))
}
colnames(alpha_div) = c("Generation", "Intercept", "Slope", "Segregating_mutations", "Average_diversity", "V_a")
plot(alpha_div$Generation, alpha_div$Slope)
plot(alpha_div$Generation, alpha_div$Slope)
plot(alpha_div$Generation, alpha_div$Intercept)
plot(alpha_div$Generation, alpha_div$Segregating_mutations)
plot(alpha_div$Generation, alpha_div$Slope)
plot(alpha_div$Generation, alpha_div$Intercept)
plot(alpha_div$Generation, alpha_div$Segregating_mutations)
plot(alpha_div$Generation, alpha_div$Average_diversity)
plot(alpha_div$Generation, alpha_div$V_a)
plot(alpha_div$Segregating_mutations, alpha_div$Average_diversity)
plot(alpha_div$Slope, alpha_div$Intercept)
pdf("r_4e-6.pdf")
plot(alpha_div$Generation, alpha_div$Slope)
plot(alpha_div$Generation, alpha_div$Intercept)
plot(alpha_div$Generation, alpha_div$Segregating_mutations)
plot(alpha_div$Generation, alpha_div$Average_diversity)
plot(alpha_div$Generation, alpha_div$V_a)
plot(alpha_div$Segregating_mutations, alpha_div$Average_diversity)
plot(alpha_div$Slope, alpha_div$Intercept)
dev.off()
plot(alpha_div$Generation, alpha_div$Slope)
